name: Cleanup PR Images

on:
  pull_request:
    types: [ closed ]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to cleanup (optional - will cleanup all old PRs if not specified)'
        required: false
        type: string
      days_old:
        description: 'Delete PR images older than N days (only for manual cleanup of all old PRs)'
        required: false
        default: '7'
        type: string

jobs:
  cleanup-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Get PR information
        id: pr-info
        run: |
          echo "pr-number=${{ github.event.number }}" >> $GITHUB_OUTPUT
          echo "pr-state=${{ github.event.pull_request.state }}" >> $GITHUB_OUTPUT
          echo "pr-merged=${{ github.event.pull_request.merged }}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: List images to cleanup
        run: |
          PR_NUMBER="${{ steps.pr-info.outputs.pr-number }}"
          echo "🧹 Cleaning up Docker images for PR #${PR_NUMBER}"
          echo ""
          echo "Images to be cleaned up:"
          echo "- ricardopaes/exe-sign:pr-${PR_NUMBER}"
          echo "- ricardopaes/exe-sign:pr-${PR_NUMBER}-*"
          echo ""
          
          # Try to get list of tags (this requires Docker Hub API token for full functionality)
          echo "To manually clean up these images:"
          echo "1. Go to https://hub.docker.com/r/ricardopaes/exe-sign/tags"
          echo "2. Search for 'pr-${PR_NUMBER}'"
          echo "3. Delete all matching tags"

      - name: Comment on PR with cleanup info
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.pr-info.outputs.pr-number }};
            const merged = ${{ steps.pr-info.outputs.pr-merged }};
            const status = merged ? 'merged' : 'closed';
            
            const comment = `## 🧹 Docker Image Cleanup
            
            This PR has been **${status}**. The following Docker images are scheduled for cleanup:
            
            - \`ricardopaes/exe-sign:pr-${prNumber}\`
            - \`ricardopaes/exe-sign:pr-${prNumber}-*\`
            
            ${merged ? 
              '✅ **PR was merged** - Changes are now available in the main image.' : 
              '❌ **PR was closed without merging** - Docker images will be removed.'
            }
            
            ### Manual cleanup steps:
            1. Visit [Docker Hub Tags](https://hub.docker.com/r/ricardopaes/exe-sign/tags)
            2. Search for \`pr-${prNumber}\`
            3. Delete all matching tags
            
            *Note: Automated cleanup requires Docker Hub API tokens. Manual cleanup ensures proper tag removal.*`;
            
            github.rest.issues.createComment({
              issue_number: prNumber,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  cleanup-bulk:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Cleanup specific PR or bulk cleanup
        run: |
          if [ -n "${{ github.event.inputs.pr_number }}" ]; then
            # Cleanup specific PR
            PR_NUMBER="${{ github.event.inputs.pr_number }}"
            echo "🧹 Cleaning up Docker images for specific PR #${PR_NUMBER}"
            echo "Images to cleanup:"
            echo "- ricardopaes/exe-sign:pr-${PR_NUMBER}"
            echo "- ricardopaes/exe-sign:pr-${PR_NUMBER}-*"
          else
            # Bulk cleanup of old PRs
            echo "🧹 Performing bulk cleanup of old PR images..."
            echo "This will identify PRs closed more than ${{ github.event.inputs.days_old }} days ago"
          fi

      - name: Get old PRs for bulk cleanup
        if: github.event.inputs.pr_number == ''
        id: old-prs
        uses: actions/github-script@v7
        with:
          script: |
            const daysOld = parseInt('${{ github.event.inputs.days_old }}') || 7;
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - daysOld);
            
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed',
              sort: 'updated',
              direction: 'desc',
              per_page: 100
            });
            
            const oldClosedPrs = prs
              .filter(pr => new Date(pr.updated_at) < cutoffDate)
              .map(pr => ({ number: pr.number, title: pr.title, updated: pr.updated_at }));
            
            console.log(`Found ${oldClosedPrs.length} PRs closed more than ${daysOld} days ago`);
            
            if (oldClosedPrs.length > 0) {
              console.log('Old PRs found:');
              oldClosedPrs.forEach(pr => {
                console.log(`- PR #${pr.number}: ${pr.title} (updated: ${pr.updated})`);
              });
            }
            
            core.setOutput('found-prs', JSON.stringify(oldClosedPrs));
            return oldClosedPrs;

      - name: Create cleanup report
        if: github.event.inputs.pr_number == ''
        uses: actions/github-script@v7
        with:
          script: |
            const oldPrs = JSON.parse('${{ steps.old-prs.outputs.found-prs }}' || '[]');
            const daysOld = '${{ github.event.inputs.days_old }}';
            
            if (oldPrs.length === 0) {
              console.log('No old PR images found for cleanup');
              return;
            }
            
            const comment = `## 🧹 Bulk Docker Image Cleanup Report
            
            Found **${oldPrs.length}** PRs closed more than ${daysOld} days ago.
            
            ### Images to cleanup:
            
            ${oldPrs.map(pr => `- \`ricardopaes/exe-sign:pr-${pr.number}\` - ${pr.title}`).join('\n')}
            
            ### Manual cleanup steps:
            1. Visit [Docker Hub Tags](https://hub.docker.com/r/ricardopaes/exe-sign/tags)
            2. Search for each \`pr-{number}\` pattern above
            3. Delete all matching tags
            
            **Note:** These images can be safely deleted as their associated PRs are closed.`;
            
            // Create an issue for tracking
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Bulk Docker Image Cleanup Report - ${new Date().toISOString().split('T')[0]}`,
              body: comment,
              labels: ['maintenance', 'docker', 'cleanup']
            });